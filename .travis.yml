sudo: false  # Use container-based infrastructure
language: python
python:
  - "2.7"
  - "3.6"
addons:
  apt:
    packages:
      # Needed for NetMHC
      - tcsh
cache:
  # cache pip files, also directory used for Ensembl downloads of GTF and FASTA files
  # along with the indexed db of intervals and ID mappings and pickles
  # of sequence dictionaries
  directories:
    - /home/travis/.cache/pyensembl/
    - /home/travis/.cache/pip
before_install:
  # Commands below copied from: http://conda.pydata.org/docs/travis.html
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  # reset the shell's lookup table for program name to path mappings
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  # install netmhcbundle: needed for mhctools tests
  - git clone https://mhcbundle:$MHC_BUNDLE_PASS@github.com/openvax/netmhc-bundle.git
  - export NETMHC_BUNDLE_HOME=$PWD/netmhc-bundle
  - mkdir tmp
  - export NETMHC_BUNDLE_TMPDIR=$PWD/tmp
  - export PATH=$PATH:$NETMHC_BUNDLE_HOME/bin
  # needed for MHCflurry predictor test
  - export KERAS_BACKEND=theano
  # we want to include mhctools and vaxrank unit tests as a general integration test to make sure
  # the stack isn't broken in an obvious way
  - git clone https://github.com/openvax/vaxrank.git
  - git clone https://github.com/openvax/mhctools.git
env:
  global:
    # MHC_BUNDLE_PASS
  secure: "pQmPFVW1HshFDTd4BcwA8sbREjmKEH8o+WO4YF0WAWF1jGb1gWEAs/kLfDpVqAmhH1CJTstFHDj2m4V6i+0+qE6SjJzL+30HdjouNMia9PJa8CXoNXUBMcwginEx512xrRk6X3Q95DY1e3ClZNGjVxCBdi8MzLzo+zCtQyOV+3oCIBPOCl8kIhJwtlHrvrz3S0l1jAyOjRrVRnAWzPBiPH1UPIXkZb5ZkP2sqKKegib/NJ9+Y/J3IV4PAANwObulCJpn7tEHn0x2j4cpHZ77/HEV6Mcn5mjR+kvBBV/1/9yYBJIVt+Ke73ydVJYtk4gMdI93wGDmqwO7oEI39YUTadA+jS1LZo5Kcb2IzK95k7Dqd3X5dqS627m+lo/xpIxcvYK1Vq/5mXacugm4/3H9DYYBJpIBsTdzxZnzGBQWkefok8jVpQDYohSXCRrjWTJlNW3R91cJdY7YdUvhcExyDSaJY74KLouX+vFHr+gXowEC4W/QN4QTEPC5WlJtOC9bo3I0FmHvOe8CEyDlvYLbjvYyVWpHLTOF+L+M6s0msjRenmLXnxra10U/uD8afByI6Fixs/hXo3lrEOO3iIG2bs0wH4aB6FKHfXNE3uXFw68u/Jc4cQp65D0+87/kGBth2792CQ+4gwZ4IVn/4rccGW8WzlGZ5ppn4yRy3WPOXg8="
install:
  - >
      conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION
      nose pylint pandoc
  - source activate test-environment
  - pip install pypandoc
  - pip install -r requirements.txt
  - pip install .
  - pip install coveralls
  # install mhctools, vaxrank and its dependent data
  - pip install --upgrade -r $PWD/mhctools/requirements.txt
  - pip install --upgrade -r $PWD/vaxrank/requirements.txt
before_script:
  # needed for MHCflurry predictor test
  - mhcflurry-downloads fetch
  # needed for vaxrank
  - pyensembl install --release 87 --species human
  - pyensembl install --release 87 --species mouse
script:
  - ./lint.sh
  # -a '!skip' lets us skip certain tests on travis (relevant for vaxrank)
  # this command runs both mhctools and vaxrank tests. Sometimes they don't print output for a long
  # time; travis_wait extends the time allowed with no output.
  - travis_wait nosetests -sv test --with-coverage --cover-package=mhcnames -a '!skip' $PWD/vaxrank $PWD/mhctools
after_success:
  coveralls
deploy:
  provider: pypi
  distributions: sdist
  user: openvax
  password: # See http://docs.travis-ci.com/user/encryption-keys/
      secure: "ZzskPyarYLTHTxxTAvD4IVmA7m/YsLlo4ARdXaSGPoIvsMRcv44PxodU+tSBSHW1GdiYzeZvpOa5dVBYr/SrnDVeGUhf6TEzw/oUuTgE22cXpBLPpXO2XOFW0Qy8HNaNJJyyZ2BX9hxhBhTRV2llDbaB02tfPjG/7ApUZT9oJzm6rAW+Ukzjw5tWbpP2cDJc3MhcPwtMGpXILcwA0OTxX61WketGe++Drefwy0jtsrzNEQyezXUY1n12AIgVh8xNbqWGKo0jf9PtddFUO4t6r+X+ITNtZKspsE9RQwqVZLdoKmWG2PSX2dcGRKAXSXrflfvmx7VhSJcsHSKZGbY70QoUTz2hjNgT6nCRq2EMen5RSZUOPFJVla4TSXNj5CUigtEDweqk+jZxi8CqrNrsAKVhudT8kyHrEmtFCsx5DGKZ3gN2CzQbkXKU4VMG/6endBeGZoMNLqPBzCQP9bbAzCsMu8bYFCGByFTpB5KeiPosLftaTaYd7URnwZvZJmXUVJ1MYs+T/bTY74O7Enix2rKa9V7Cw1y2V6/tVzyTzTAW3eX9yokOePZoMutHKvdEh5AWdsa1KZTmRHJeUeA+aY5owXEiu7I4ElsdsRiYC/2vlvlVrbw02vR5GSXZH89xOOXNFKQEnrGagYmglw4Ao625N5Clh4RUAeQ38jViS6Q="
  on:
    branch: master
  condition: $TRAVIS_PYTHON_VERSION = "2.7"
